/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package twofish;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dell
 */
public class EncryptApp extends javax.swing.JFrame {


    
    public EncryptApp() {
        initComponents();
    }
//    private String encryptionKey192bit = "D1079B789F666649B6BD7D1629F1F77E7AFF7A70CA2FF28A";
    private JFileChooser chooser = new JFileChooser();
    private byte[] ciphertemp;
    private String encryptionkey;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Plainttext = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Key = new javax.swing.JTextArea();
        Encrypt_Files = new javax.swing.JButton();
        Save_Files = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Time = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        Get_Files = new javax.swing.JButton();
        Notification = new javax.swing.JLabel();
        Encrypt_Button = new javax.swing.JButton();
        Decrypt_Button = new javax.swing.JButton();
        AvalancheEffect_Button = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Cyphertext = new javax.swing.JTextArea();
        Save_Files2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        Plainttext.setColumns(20);
        Plainttext.setLineWrap(true);
        Plainttext.setRows(5);
        Plainttext.setToolTipText("");
        jScrollPane1.setViewportView(Plainttext);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        Key.setColumns(20);
        Key.setRows(5);
        jScrollPane2.setViewportView(Key);

        Encrypt_Files.setText("Encrypt File");
        Encrypt_Files.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encrypt_FilesActionPerformed(evt);
            }
        });

        Save_Files.setText("Save");
        Save_Files.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_FilesActionPerformed(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        Time.setEditable(false);
        Time.setColumns(20);
        Time.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Time.setRows(5);
        jScrollPane3.setViewportView(Time);

        jLabel1.setBackground(new java.awt.Color(153, 255, 51));
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TWOFISH ALGORITHM ENCRYPTION");
        jLabel1.setToolTipText("");

        Get_Files.setText("Browse");
        Get_Files.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Get_FilesActionPerformed(evt);
            }
        });

        Notification.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Notification.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Notification.setText("Notification");

        Encrypt_Button.setBackground(new java.awt.Color(255, 0, 0));
        Encrypt_Button.setText("ENCRYPT");
        Encrypt_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encrypt_ButtonActionPerformed(evt);
            }
        });

        Decrypt_Button.setBackground(new java.awt.Color(51, 255, 255));
        Decrypt_Button.setText("DECRYPT");
        Decrypt_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Decrypt_ButtonActionPerformed(evt);
            }
        });

        AvalancheEffect_Button.setBackground(new java.awt.Color(51, 255, 255));
        AvalancheEffect_Button.setText("AVALANCHE EFFECT");
        AvalancheEffect_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvalancheEffect_ButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        Cyphertext.setEditable(false);
        Cyphertext.setColumns(20);
        Cyphertext.setLineWrap(true);
        Cyphertext.setRows(5);
        Cyphertext.setToolTipText("");
        jScrollPane4.setViewportView(Cyphertext);

        Save_Files2.setText("Save");
        Save_Files2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_Files2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Save_Files, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Get_Files, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AvalancheEffect_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Save_Files2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Encrypt_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Decrypt_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Encrypt_Files, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Notification, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Decrypt_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Encrypt_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AvalancheEffect_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Get_Files, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Save_Files, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Encrypt_Files, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Notification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Save_Files2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Encrypt_FilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encrypt_FilesActionPerformed
        try {
            String cek = Key.getText();
            if(!"".equals(cek)){
                String simpankata = Plainttext.getText();
                byte[] perubahansimpankata = simpankata.getBytes();
                encryptionkey = aewordchange.getMd5(cek);
                double startTime = System.nanoTime();
                byte[] fileCiphertext = Twofish.twofishECBEncrypt(perubahansimpankata, encryptionkey);
                double endTime = System.nanoTime(); 
                Time.setText((endTime - startTime)/1000000 + " Ms");
                Notification.setText("SUCCESS ENCRYPTION");
                Notification.setForeground(Color.green);
                ciphertemp = fileCiphertext;
                Cyphertext.setText(new String(ciphertemp));
            }else{
                JOptionPane.showMessageDialog(this, "Input the key");
            }
        } catch (Exception ex) {
            Notification.setText("FAILED ENCRYPTION");
            Notification.setForeground(Color.red);
        }
    }//GEN-LAST:event_Encrypt_FilesActionPerformed

    private void Save_FilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_FilesActionPerformed
        try {
            String namafiles = JOptionPane.showInputDialog("Type file name");
            String ambilnama = Plainttext.getText();
            byte[] simpannama = ambilnama.getBytes();
            File encryptedFile = new File("examples/" + namafiles + ".txt");
            Files.write(encryptedFile.toPath(), simpannama);
            
            Notification.setText("SAVING FILE SUCCESS");
        } catch (Exception ex) {
            Notification.setText("FAILED TO SAVE FILE");
        }
        
    }//GEN-LAST:event_Save_FilesActionPerformed

    private void Get_FilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Get_FilesActionPerformed
        try {
            int pilih = chooser.showOpenDialog(this);
            File f = null;
            if(pilih == chooser.APPROVE_OPTION){
                f = chooser.getSelectedFile();
                byte[] readfiles = Files.readAllBytes(Paths.get(f.getPath()));
                String changefiles = new String(readfiles);
                Plainttext.setText(changefiles);
                Notification.setText("SUCCESS SELECT FILE");
            }else {
                Notification.setText(" SELECT ANOTHER FILE");
            }
            
            
        } catch (IOException ex) {
            Notification.setText("FAILED TO SELECT FILE");
            Notification.setForeground(Color.red);
        }
    }//GEN-LAST:event_Get_FilesActionPerformed

    private void Encrypt_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encrypt_ButtonActionPerformed
        new EncryptApp().setVisible(true);
        dispose();
    }//GEN-LAST:event_Encrypt_ButtonActionPerformed

    private void Decrypt_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Decrypt_ButtonActionPerformed
        new DecryptApp().setVisible(true);
        dispose();
    }//GEN-LAST:event_Decrypt_ButtonActionPerformed

    private void AvalancheEffect_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvalancheEffect_ButtonActionPerformed
        new AvEApp().setVisible(true);
        dispose();
    }//GEN-LAST:event_AvalancheEffect_ButtonActionPerformed

    private void Save_Files2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_Files2ActionPerformed
        try{
            if(!"".equals(Cyphertext.getText())){
                String namafiles = JOptionPane.showInputDialog("Type file encryption name");
                byte[] changefiles = ciphertemp;
                File encryptedFile = new File("examples/" + namafiles + ".txt");
                Files.write(encryptedFile.toPath(), changefiles);
            }else{
                JOptionPane.showMessageDialog(this, "No file to be save");
            }
            
        } catch(Exception ex){
            
        }
    }//GEN-LAST:event_Save_Files2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncryptApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncryptApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncryptApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncryptApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncryptApp().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AvalancheEffect_Button;
    private javax.swing.JTextArea Cyphertext;
    private javax.swing.JButton Decrypt_Button;
    private javax.swing.JButton Encrypt_Button;
    private javax.swing.JButton Encrypt_Files;
    private javax.swing.JButton Get_Files;
    private javax.swing.JTextArea Key;
    private javax.swing.JLabel Notification;
    private javax.swing.JTextArea Plainttext;
    private javax.swing.JButton Save_Files;
    private javax.swing.JButton Save_Files2;
    private javax.swing.JTextArea Time;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
